et -g prefix C-z
unbind C-b
bind z send-prefix

#set -g mode-mouse on
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on
# bind-key -n C-space next-window
bind-key -n C-space send-keys 'C-l'
set -g default-terminal "xterm"
set -g status-left-length 35
set -sg escape-time 0
set-option -g default-shell /bin/zsh
set-window-option -g alternate-screen off

set-option -g default-command "reattach-to-user-namespace -l $SHELL"
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -n C-Left select-pane -L
bind -n C-Down select-pane -D
bind -n C-Up select-pane -U
bind -n C-Right select-pane -R

# Rebinding the pane splitting bindings
unbind % # Remove default bindings since we're replacing
bind | split-window -hc "#{pane_current_path}"
bind - split-window -vc "#{pane_current_path}"
bind '"' split-window -vc "#{pane_current_path}"

## Smart pane switching with awareness of vim splits
# Smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# resize pane
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind O resize-pane -Z

# clear screen
bind C-l send-keys 'C-l'

# fast shit
set-option -g escape-time 0
set -g default-terminal "screen-256color-bce"

# Change cursor in vim to distinguish between insert and command mode
# # Use in conjunciton with tmux-cursors.vim
set-option -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'



# designed to work well in light mode or dark mode
#
# copy-and-paste into your tmux.conf or source it like so:
#
#   source-file path/to/tmux-pencilcolors.conf
#
# statusline
set -g status-bg default # transparent
set -g status-fg magenta
set -g status-attr default

# default window title colors
setw -g window-status-fg blue
setw -g window-status-bg default
setw -g window-status-attr dim

# active window title colors
setw -g window-status-current-fg brightred
setw -g window-status-current-bg default
setw -g window-status-current-attr bright

# bell alerted window color
setw -g window-status-bell-bg red
setw -g window-status-bell-fg white
setw -g window-status-bell-attr bright

# content alerted color
#setw -g window-status-content-bg blue
#setw -g window-status-content-fg white
#setw -g window-status-content-attr bright
setw -g window-status-activity-bg blue
setw -g window-status-activity-fg white
setw -g window-status-activity-attr bright

# pane borders
set -g pane-border-fg white
set -g pane-border-bg default
set -g pane-active-border-fg brightblack
set -g pane-active-border-bg default

# command line
set -g message-fg default
set -g message-bg default
set -g message-attr bright


